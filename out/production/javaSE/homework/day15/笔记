并发：指两个或多个事件在同一个时间段内发生。
并行：指两个或多个事件在同一时刻发生（同时发生）。
进程：是指一个内存中运行的应用程序，每个进程都有一个独立的内存空间，一个应用程序可以同时运行多
个进程；进程也是程序的一次执行过程，是系统运行程序的基本单位；系统运行一个程序即是一个进程从创
建、运行到消亡的过程。
线程：线程是进程中的一个执行单元，负责当前进程中程序的执行，一个进程中至少有一个线程。一个进程
中是可以有多个线程的，这个应用程序也可以称之为多线程程序。start()启动线程，线程调用run（）方法执行
线程体
开启一个线程只能调用start（），不能直接调用run（）
实现Runnable接口的优势：
1. 适合多个相同的程序代码的线程去共享同一个资源。
2. 可以避免java中的单继承的局限性。
3. 增加程序的健壮性，实现解耦操作，代码可以被多个线程共享，代码和线程独立。
4. 线程池只能放入实现Runnable或Callable类线程，不能直接放入继承Thread的类。线程加入
多条线程时，当指定线程调用join方法时，线程执行权交给该线程，并且当前线程必须等该线程执行完毕之后才
会执行但有可能被其他线程抢去CPU执行权.

守护线程
当用户线程(非守护线程)执行完毕时，守护线程也会停止执行但由于CPU运行速度太快，当用户线程执行完毕，
将信息传递给守护线程，会有点时间差，而这些时间差会导致还会执行一点守护线程不管开启多少个线程(用户
线程),守护线程总是随着第一个用户线程的停止而停止线程优先级

线程优先级默认为5 最高为10
最低为1，如果不在这个范围之内则会抛出.不合法参数异常线程优先级高的,更容易让线程在就绪状态中抢到线
程执行权,变成执行状态.但是 线程优先级高 也不一定执行的就多.也有可能优先
级低的优先执行完毕
线程礼让，告知当前线程可以将执行权礼让给其他线程，礼让给优先级相对
高一点的线程，但仅仅是一种告知,并不是强制将执行权转让给其他线程.也有可能下次的执行权还在原线程这
里。如果想让原线程强制让出执行权 可以使用join()方法
同步代码块：synchronized 关键字可以用于方法中的某个区块中，表示只对这个区块的资源实行互斥访问。
同步方法:使用synchronized修饰的方法,就叫做同步方法,保证A线程执行该方法的时候,其他线程只能在方法外
等着。

线程安全问题都是由全局变量及静态变量引起的。若每个线程中对全局变量、静态变量只有读操作，而无写
操作，一般来说，这个全局变量是线程安全的；若有多个线程同时执行写操作，一般都需要考虑线程同步，
否则的话就可能影响线程安全。
