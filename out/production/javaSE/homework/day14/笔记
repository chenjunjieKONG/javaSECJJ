HashMap<k,y>的特点
HashMap的键是唯一的，不允许重复，但是值可以重复
HashMap是无序的
key可以为空，value可以为空，并且二者可以同时为空
LinkedHashMap是HashMap中的一个子类，它是链表和哈希表组合的一个数据存储结构。

异常 ：指的是程序在执行过程中，出现的非正常的情况，最终会导致JVM的非正常停止。

异常的根类是Throwable ，其下有两个子类：Error 与Exception ，平常所说的异常指
Exception 。

Error:严重错误Error，无法通过处理的错误，只能事先避免。
Exception:表示异常，异常产生后程序员可以通过代码的方式纠正，使程序继续运行，是必须
要处理的。
printStackTrace() :打印异常的详细信息。包含了异常的类型,异常的原因,还包括异常出现
的位置,在开发和调试阶段,都得使用printStackTrace。
getMessage() :获取发生异常的原因。

异常(Exception)的分类:根据在编译时期还是运行时期去检查异常?
编译时期异常:checked异常。在编译时期,就会检查,如果没有处理异常,则编译失败。(如日期
格式化异常)
运行时期异常:runtime异常。在运行时期,检查异常.在编译时期,运行异常不会编译器检测测(
不报错)。(如数学异常)

如果异常出现的话,会立刻终止程序,所以我们得处理异常:
1. 该方法不处理,而是声明抛出,由该方法的调用者来处理(throws)。
2. 在方法中使用try-catch的语句块来处理异常。

throw用在方法内，用来抛出一个异常对象，将这个异常对象传递到调用者处，并结束当前方
法的执行。

声明异常：将问题标识出来，报告给调用者。如果方法内通过throw抛出了编译时异常，而没
有捕获处理（稍后讲解该方式），那么必须通过throws进行声明，让调用者去处理。

throws用于进行异常类的声明，若该方法可能有多种异常情况产生，那么在throws后面可以写
多个异常类，用逗号隔开。

throw用在方法内，用来抛出一个异常对象，将这个异常对象传递到调用者处，并结束当前方法的执行。
关键字throws运用于方法声明之上,用于表示当前方法不处理异常,而是提醒该方法的调用者来处理异常(抛出异常).

try-catch的方式就是捕获异常。
捕获异常：Java中对异常有针对性的语句进行捕获，可以对出现的异常进行指定方式的处理。

try里面放的是可能发生异常的代码
规定：不会发生异常的代码不能放在try里面

catch：用来进行某种异常的捕获，实现对捕获到的异常进行处理。
finally：无论如何都要执行的语句，但是不能单独使用，当只有
在try或者catch中调用退出JVM的相关方法,此时finally才不会执行,否则finally永远会执行。
捕获异常时，必须子类在上面，父类在下面
