 一个File对象代表硬盘中实际存在的一个文件或者目录。
 无论该路径下是否存在文件或者目录，都不影响File对象的创建。

getAbsolutePath() ：返回此File的绝对路径名字符串。
getPath() ：将此File转换为路径名字符串。
getName() ：返回由此File表示的文件或目录的名称。
length() ：返回由此File表示的文件的长度。

绝对路径：从盘符开始的路径，这是一个完整的路径。
相对路径：相对于项目目录的路径，这是一个便捷的路径，开发中经常使用。

exists() ：此File表示的文件或目录是否实际存在。
isDirectory() ：此File表示的是否为目录。
isFile() ：此File表示的是否为文件。

createNewFile() ：当且仅当具有该名称的文件尚不存在时，创建一个新的空文件。
delete() ：删除由此File表示的文件或目录。
mkdir() ：创建由此File表示的目录。
mkdirs() ：创建由此File表示的目录，包括任何必需但不存在的父目录。

list() ：返回一个String数组，表示该File目录中的所有子文件或目录。
listFiles() ：返回一个File数组，表示该File目录中的所有的子文件或目录

递归：指在当前方法内调用自己的这种现象。
递归的分类:
递归分为两种，直接递归和间接递归。
直接递归称为方法自身调用自己。
间接递归可以A方法调用B方法，B方法调用C方法，C方法调用A方法。
注意事项：
递归一定要有条件限定，保证递归能够停止下来，否则会发生栈内存溢出。
在递归中虽然有限定条件